{
  "db_name": "PostgreSQL",
  "query": "\n        WITH\n            warps_rare AS (\n                SELECT\n                    warps.*,\n                    (\n                        coalesce(characters.rarity, light_cones.rarity) = 4\n                    )::int AS rare4,\n                    (\n                        coalesce(characters.rarity, light_cones.rarity) = 5\n                    )::int AS rare5\n                FROM\n                    warps\n                    LEFT JOIN characters ON characters.id = character\n                    LEFT JOIN light_cones ON light_cones.id = light_cone\n                ORDER BY\n                    id\n            ),\n            warps_sum AS (\n                SELECT\n                    id,\n                    uid,\n                    gacha_type,\n                    sum(rare4) OVER w sum4,\n                    sum(rare5) OVER w sum5,\n                    lead(rare4) OVER w lead4,\n                    lead(rare5) OVER w lead5\n                FROM\n                    warps_rare\n                WINDOW\n                    w AS (\n                        PARTITION BY\n                            uid,\n                            gacha_type\n                        ORDER BY\n                            id\n                    )\n            ),\n            warps_count_4 AS (\n                SELECT\n                    uid,\n                    gacha_type,\n                    count(id)\n                FROM\n                    warps_sum\n                GROUP BY\n                    uid,\n                    gacha_type,\n                    sum4\n                HAVING\n                    max(lead4) = 1\n            ),\n            warps_count_5 AS (\n                SELECT\n                    uid,\n                    gacha_type,\n                    count(id)\n                FROM\n                    warps_sum\n                GROUP BY\n                    uid,\n                    gacha_type,\n                    sum5\n                HAVING\n                    max(lead5) = 1\n            ),\n            _ AS (\n                INSERT INTO\n                    warps_stats_4 (uid, gacha_type, COUNT, AVG, rank_count, rank_avg)\n                SELECT\n                    uid,\n                    gacha_type,\n                    count(*),\n                    avg(COUNT),\n                    RANK() OVER (\n                        PARTITION BY\n                            gacha_type\n                        ORDER BY\n                            count(*) DESC\n                    ) rank_count,\n                    RANK() OVER (\n                        PARTITION BY\n                            gacha_type\n                        ORDER BY\n                            avg(COUNT)\n                    ) rank_avg\n                FROM\n                    warps_count_4\n                GROUP BY\n                    uid,\n                    gacha_type\n                HAVING\n                    CASE \n                        WHEN gacha_type = 'departure' THEN TRUE\n                        WHEN gacha_type = 'standard' THEN count(*) >= 5\n                        ELSE count(*) >= 10\n                    END\n            )\n        INSERT INTO\n            warps_stats_5 (uid, gacha_type, COUNT, AVG, rank_count, rank_avg)\n        SELECT\n            uid,\n            gacha_type,\n            count(*),\n            avg(COUNT),\n            RANK() OVER (\n                PARTITION BY\n                    gacha_type\n                ORDER BY\n                    count(*) DESC\n            ) rank_count,\n            RANK() OVER (\n                PARTITION BY\n                    gacha_type\n                ORDER BY\n                    avg(COUNT)\n            ) rank_avg\n        FROM\n            warps_count_5\n        GROUP BY\n            uid,\n            gacha_type;\n        ",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": []
    },
    "nullable": []
  },
  "hash": "3928efac53bf4a33feaeec5c73feff6e4b171510067dce464df171b5aa9303b9"
}
